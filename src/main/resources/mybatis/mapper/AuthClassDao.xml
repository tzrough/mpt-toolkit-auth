<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.pg.mpt.toolkit.auth.dao.AuthClassDao">
  <resultMap id="BaseResultMap" type="cn.com.pg.mpt.toolkit.auth.entity.AuthClass">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="auth_service_name" jdbcType="VARCHAR" property="authServiceName" />
    <result column="auth_type" jdbcType="INTEGER" property="authType" />
    <result column="auth_range" jdbcType="VARCHAR" property="authRange" />
    <result column="auth_ch_name" jdbcType="VARCHAR" property="authChName" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="deleted_by" jdbcType="VARCHAR" property="deletedBy" />
  </resultMap>
  <sql id="Base_Column_List">
    id, auth_service_name, auth_type, auth_range, auth_ch_name, is_deleted,
    version, created_at, created_by, updated_at, updated_by, deleted_at, deleted_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from auth_class
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from auth_class
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <!-- 插入或更新权限模块 -->
  <insert id="replaceAuthClass" keyColumn="id" keyProperty="id" parameterType="cn.com.pg.mpt.toolkit.auth.entity.AuthClass" useGeneratedKeys="true">
    replace into auth_class
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authServiceName != null">
        auth_service_name,
      </if>
      <if test="authType != null">
        auth_type,
      </if>
      <if test="authRange != null">
        auth_range,
      </if>
      <if test="authChName != null">
        auth_ch_name,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
      <if test="deletedBy != null">
        deleted_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authServiceName != null">
        #{authServiceName,jdbcType=VARCHAR},
      </if>
      <if test="authType != null">
        #{authType,jdbcType=INTEGER},
      </if>
      <if test="authRange != null">
        #{authRange,jdbcType=VARCHAR},
      </if>
      <if test="authChName != null">
        #{authChName,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedBy != null">
        #{deletedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="cn.com.pg.mpt.toolkit.auth.entity.AuthClass">
    update auth_class
    <set>
      <if test="authServiceName != null">
        auth_service_name = #{authServiceName,jdbcType=VARCHAR},
      </if>
      <if test="authType != null">
        auth_type = #{authType,jdbcType=INTEGER},
      </if>
      <if test="authRange != null">
        auth_range = #{authRange,jdbcType=VARCHAR},
      </if>
      <if test="authChName != null">
        auth_ch_name = #{authChName,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedBy != null">
        deleted_by = #{deletedBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.pg.mpt.toolkit.auth.entity.AuthClass">
    update auth_class
    set auth_service_name = #{authServiceName,jdbcType=VARCHAR},
      auth_type = #{authType,jdbcType=INTEGER},
      auth_range = #{authRange,jdbcType=VARCHAR},
      auth_ch_name = #{authChName,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      deleted_by = #{deletedBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 查询权限模块最大的版本号 -->
  <select id="getMaxVersion" parameterType="cn.com.pg.mpt.toolkit.auth.entity.AuthClass" resultType="java.lang.Integer">
    select IFNULL(max(version), 0) as version
    from auth_class
    where
      auth_service_name = #{authServiceName,jdbcType=VARCHAR}
      and
      auth_type = #{authType,jdbcType=INTEGER}
      and
      auth_range = #{authRange,jdbcType=VARCHAR}
  </select>

</mapper>